{"version":3,"sources":["js/03-promises.js"],"names":["refs","delayEl","document","querySelector","stepEl","amountEl","submitBtm","qq","e","preventDefault","delay","Number","value","step","index","createPromise","then","position","console","log","catch","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener"],"mappings":";AAAA,MAAMA,EAAO,CACXC,QAASC,SAASC,cAAc,kBAChCC,OAAQF,SAASC,cAAc,iBAC/BE,SAAUH,SAASC,cAAc,mBACjCG,UAAWJ,SAASC,cAAc,oBAIpC,SAASI,EAAGC,GACVA,EAAEC,iBACEC,IAAAA,EAAQC,OAAOX,EAAKC,QAAQW,OAC5BC,EAAOF,OAAOX,EAAKI,OAAOQ,OACzB,IAAA,IAAIE,EAAQ,EAAGA,GAASd,EAAKK,SAASO,MAAOE,IAAS,CAGzDC,EAFeD,EAESJ,GACrBM,KAAK,EAAGC,SAAAA,EAAUP,MAAAA,MACjBQ,QAAQC,2BAA2BF,QAAeP,SAEnDU,MAAM,EAAGH,SAAAA,EAAUP,MAAAA,MAClBQ,QAAQC,0BAA0BF,QAAeP,SAGrDA,GAASG,GAGb,SAASE,EAAcE,EAAUP,GACxB,OAAA,IAAIW,QAAQ,CAACC,EAASC,KACrBC,MAAAA,EAAgBC,KAAKC,SAAW,GACtCC,WAAW,KACLH,EACFF,EAAQ,CAAEL,SAAAA,EAAUP,MAAAA,IAEpBa,EAAO,CAAEN,SAAAA,EAAUP,MAAAA,KAEpBA,KA5BPV,EAAKM,UAAUsB,iBAAiB,QAASrB","file":"03-promises.30a07bc9.js","sourceRoot":"../src","sourcesContent":["const refs = {\n  delayEl: document.querySelector('[name=\"delay\"]'),\n  stepEl: document.querySelector('[name=\"step\"]'),\n  amountEl: document.querySelector('[name=\"amount\"]'),\n  submitBtm: document.querySelector('[type=\"submit\"]'),\n};\n\nrefs.submitBtm.addEventListener('click', qq);\nfunction qq(e) {\n  e.preventDefault();\n  let delay = Number(refs.delayEl.value);\n  let step = Number(refs.stepEl.value);\n  for (let index = 1; index <= refs.amountEl.value; index++) {\n    let position = index;\n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    delay += step;\n  }\n}\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"]}